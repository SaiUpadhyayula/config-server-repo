server.port=8443
server.netty.connection-timeout=2s
server.netty.idle-timeout=10s
server.shutdown=graceful

# SSL Properties
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/edge.p12
server.ssl.key-store-password=password
server.ssl.key-alias=localhost

app.eureka-server=localhost

# Spring Redis Properties
spring.data.redis.host=localhost
spring.data.redis.port=6378
spring.data.redis.timeout=2000
spring.data.redis.jedis.pool.max-idle=6
spring.data.redis.jedis.pool.min-idle=2
spring.data.redis.jedis.pool.max-active=10

# Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://real-world-microservices.eu.auth0.com/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://real-world-microservices.eu.auth0.com/.well-known/jwks.json
auth0.audience= https://real-world-microservices.eu.auth0.com/api/v2/

# Eureka Client Properties
eureka.client.service-url.defaultZone=http://eureka:password@${app.eureka-server}:8761/eureka/
eureka.client.initial-instance-info-replication-interval-seconds=10
eureka.client.registry-fetch-interval-seconds=10

# Eureka Instance Properties
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.lease-renewal-interval-in-seconds=15
eureka.instance.lease-expiration-duration-in-seconds=15

spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/books/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=productServiceCircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/product-service-fallback

spring.cloud.gateway.routes[1].id=cart-service
spring.cloud.gateway.routes[1].uri=lb://cart-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/cart/**

spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/order/**

spring.cloud.gateway.routes[3].id=search-service
spring.cloud.gateway.routes[3].uri=lb://search-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/search/books/**

## Discover Server Route
spring.cloud.gateway.routes[4].id=discovery-server
spring.cloud.gateway.routes[4].uri=http://eureka:password@${app.eureka-server}:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[4].filters[0]=SetPath=/

## Discover Server Static Resources Route
spring.cloud.gateway.routes[5].id=discovery-server-static
spring.cloud.gateway.routes[5].uri=http://eureka:password@${app.eureka-server}:8761
spring.cloud.gateway.routes[5].predicates[0]=Path=/eureka/**

## Config Server Route
spring.cloud.gateway.routes[6].id=config-server
spring.cloud.gateway.routes[6].uri=lb://config-server
spring.cloud.gateway.routes[6].predicates[0]=Path=/config/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1


resilience4j.circuitbreaker.configs.default.slidingWindowSize=20
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=15000
resilience4j.timelimiter.configs.default.timeoutDuration=5s

spring.session.store-type=redis
spring.session.timeout=30m
spring.session.redis.namespace=microservices:gateway

# Rate-limiting
spring.cloud.gateway.default-filters.[0].name=SaveSession

spring.cloud.gateway.default-filters.[1].name=RequestRateLimiter
spring.cloud.gateway.default-filters.[1].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.default-filters.[1].args.redis-rate-limiter.burstCapacity=20

spring.cloud.gateway.default-filters.[2].name=Retry
spring.cloud.gateway.default-filters.[2].args.retries=3
spring.cloud.gateway.default-filters.[2].args.methods=GET
spring.cloud.gateway.default-filters.[2].args.statuses=SERVICE_UNAVAILABLE
spring.cloud.gateway.default-filters.[2].args.exception=java.io.IOException
spring.cloud.gateway.default-filters.[2].args.backoff.firstBackoff=100ms
spring.cloud.gateway.default-filters.[2].args.backoff.maxBackoff=500ms
spring.cloud.gateway.default-filters.[2].args.backoff.factor=2
spring.cloud.gateway.default-filters.[2].args.backoff.basedOnPreviousValue=false

spring.cloud.config.fail-fast=true
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.max-interval=2000
spring.cloud.config.retry.multiplier=1.5

logging.level.io.github.resilience4j=DEBUG

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

management.endpoints.web.exposure.include=*
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability= 1.0
