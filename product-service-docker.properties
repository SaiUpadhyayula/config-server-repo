server.port=8080

spring.data.mongodb.host=mongo
spring.data.mongodb.port=27017
spring.data.mongodb.database=product-service
springdoc.swagger-ui.path=/swagger-ui.html

# Eureka Client Properties
app.eureka-server=discovery-server
eureka.client.service-url.defaultZone=http://eureka:password@${app.eureka-server}:8761/eureka/
eureka.client.initial-instance-info-replication-interval-seconds=10
eureka.client.registry-fetch-interval-seconds=10

# Eureka Instance Properties
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.lease-renewal-interval-in-seconds=15
eureka.instance.lease-expiration-duration-in-seconds=15

management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability= 1.0
management.endpoints.web.exposure.include=*
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring.cloud.config.fail-fast=true
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.max-interval=2000
spring.cloud.config.retry.multiplier=1.5

# Kafka Properties
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id= bookGroup
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.techie.microservices.product.event.BookCreatedEvent

management.endpoint.env.show-values=ALWAYS
